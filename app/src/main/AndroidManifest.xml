<?xml version="1.0" encoding="utf-8"?>
<!--suppress ALL -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.android.sunshine.app" >

    <!-- Required for GCM -->

    <!-- Permissions required for network access. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Permissions required by the sync adapter. -->
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>

    <!-- Permissions required for place picker. -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <!-- Permissions required by Google Cloud Messaging (which also requires INTERNET). -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <permission android:name="com.example.android.sunshine.app.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.example.android.sunshine.app.permission.C2D_MESSAGE" />


    <application
        android:allowBackup="true"
        android:fullBackupContent="false"
        android:icon="@mipmap/ic_launcher"
        android:logo="@drawable/ic_logo"
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        android:supportsRtl="true">

        <!-- API key for the Google Places for Android API -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyBDevM2KLGWvhEsDbx6-lXhLEAN_PSBHL4"/>

        <!-- GOOGLE CLOUD MESSAGING DECLARATIONS -->

        <!-- GcmReceiver is the class in the app which handles incoming GCM messages -->
        <!-- The SEND permission here means that GcmReceiver will only handle messages from a
             message source which has the com.google.android.c2dm.permission.SEND permission -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND">
            <!-- The RECEIVE and REGISTRATION declarations here are required if the app
                 supports pre-Android 4.4 devices -->
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
                <category android:name="com.example.android.sunshine.app" />
            </intent-filter>
        </receiver>

        <!-- Today Widget -->
        <receiver
            android:name=".widget.TodayWidgetProvider"
            android:label="@string/title_widget_today" >
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.android.sunshine.app.ACTION_DATA_UPDATED" />
            </intent-filter>
            <meta-data android:name="android.appwidget.provider"
                       android:resource="@xml/widget_info_today" />
        </receiver>
        <service android:name=".widget.TodayWidgetIntentService" />

        <!-- Detail Widget -->
        <receiver
            android:name=".widget.DetailWidgetProvider"
            android:label="@string/title_widget_detail"
            android:enabled="@bool/widget_detail_enabled" >
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.android.sunshine.app.ACTION_DATA_UPDATED" />
            </intent-filter>
            <meta-data android:name="android.appwidget.provider"
                       android:resource="@xml/widget_info_detail" />
        </receiver>
        <service
            android:name=".widget.DetailWidgetRemoteViewsService"
            android:enabled="@bool/widget_detail_enabled"
            android:exported="false"
            android:permission="android.permission.BIND_REMOTEVIEWS" />

        <!-- MyGcmListenerService allows "various aspects of handling messages". -->
        <service
            android:name=".gcm.MyGcmListenerService"
            android:exported="false">
            <!-- The RECEIVE declaration here is required if the app supports pre-Android 4.4 devices (?) -->
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>

        <!-- MyInstanceIDListenerService handles the creation, rotation and updating of registration tokens. -->
        <service
            android:name=".gcm.MyInstanceIDListenerService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>

        <!-- RegistrationIntentService is a helper service. -->
        <service
            android:name=".gcm.RegistrationIntentService"
            android:exported="false">
        </service>

        <!-- END OF GOOGLE CLOUD MESSAGING DECLARATIONS -->

        <provider
            android:authorities="@string/content_authority"
            android:name=".data.WeatherProvider"
            android:enabled="true"
            android:exported="false"
            android:syncable="true" />

        <!-- The SyncAdapter service -->
        <service android:name=".sync.SunshineSyncService"
            android:exported="true">
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>
        <!-- SyncAdapter's dummy authentication service -->
        <service android:name=".sync.SunshineAuthenticatorService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.Main">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".DetailActivity"
            android:label="@string/title_activity_detail"
            android:parentActivityName=".MainActivity"
            android:theme="@style/AppTheme.Details">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.example.android.sunshine.app.MainActivity" />
        </activity>
        <activity
            android:name="com.example.android.sunshine.app.SettingsActivity"
            android:theme="@style/SettingsTheme"
            android:parentActivityName=".MainActivity"
            android:label="@string/title_activity_settings">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.example.android.sunshine.app.MainActivity" />
        </activity>
    </application>

</manifest>
